//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BloodProject.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class BloodType
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public BloodType()
        {
            this.BloodTypes1 = new HashSet<BloodType>();
            this.BloodTypes = new HashSet<BloodType>();
            this.Donations = new HashSet<Donation>();
        }
    
        public int id { get; set; }
        public string Name { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BloodType> BloodTypes1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BloodType> BloodTypes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Donation> Donations { get; set; }

        public  bool isllowedfor( int id)
        {

            BloodType b = new BloodDatabaseEntities().BloodTypes.Find(Convert.ToInt32(id));
            if (b != null)
            {
                if (b.BloodTypes1.Where(t => t.id == this.id).Count() > 0)
                {
                    return true;
                }
            }

            return false;
        }
    }
}
